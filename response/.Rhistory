# most typical forms are:
# anuṣṭubh: 4 * 8 syl
# triṣṭubh: 4 * 11 syl
# jagatī: 4 * 12 syl
# also:
# gāyatrī: 3 * 8 syl
# virạj: 3 * 11 syl.
# stanzas which combine dimetre and trimetre verses are called 'lyric'
# feet:
# "in almost all metres a general iambic rhythm may be noticed" (:9)
# SEH: "in all metres the rhythm of the latter part of the verse is much more rigidly defined than that of the earlier part." (:9)
d$template <- "iam6"
d$template[d$sample == "rgveda8"] <- "iam4"
# normalise freqs to 1
d$f0 <- d$f0 / 100
d$f1 <- d$f1 / 100
# size of each sample. counts from arnold1905:69:
# 23669 trimet (11syl and 12syl), 15000 dimet.
# however, gunkel and ryan exclude 761 11syl and 12syl lines.
# trimet also contains 10syl, and dimet 7syl,
# so counts are approximate.
# also, arnold gives counts for trimet, but gunkel&ryan
# give frequencies for 11syl and 12syl separately.
# i will divide arnold's trimet counts by 2 to get a *rough*
# approximation to the counts of 11syl and 12syl.
d$size <- (23669 - 761) / 2
d$size[d$template == "iam4"] <- 15000
# counts by position
d$c0 <- round(d$f0 * d$size, 0)
d$c1 <- round(d$f1 * d$size, 0)
which(d$c0 + d$c1 != d$size)
# reorder
entcolnames <- colnames(readRDS("../datuak/est/est_tetra_entropy1.rds"))
d <- d[,entcolnames]
rm(list=ls())     # remove previous objects from workspace
# install.packages("pegas")
library(ggplot2)
library(psych)
library(plyr)
library(vcd)
library(gridExtra)
library(vegan)
library(reshape2)
# library(pegas)
source("rmetrics-functions1.R")
# source("skriptak/nl_nlb-couplets1.R")
#--------------------------------------------------------
# Load data
#--------------------------------------------------------
# Data taken from Gunkel & Ryan 2011.
# The data includes proportion of heavy syllables in each position of 3 classes of metres:
# metres with 8, 11, 12 syllables. The proportion is calculated on a sample of verses from the Rgveda (N?).
d <- read.table("../datuak/san/san_rgveda1.csv", stringsAsFactors = F,
sep = "\t", header = T)
require(sqldf)
download.file('http://www.let.rug.nl/wieling/ll/analysis-German.Rmd', 'analysis-German.Rmd')
source('uhUhm/multiplot.R')
library(ggplot2)
d <- readRDS("../datuak/seh_dev1.rds")
d$deviationInt <- as.integer(d$deviation)-1
d$relposbins <- cut(d$relPosition, seq(0, 1, .1))
# base
dplot2 <- ggplot(d) + aes(x = relPosition,
y = deviationInt, colour = prominence)
# only regression lines
dplot2a <- dplot2 + stat_smooth(aes(group = prominence, colour = prominence),
method = "lm", size = 1) +
facet_wrap( ~ language) + theme_bw() +
labs(x = "Relative position of syllable within line",
y = "Probability of deviating from template") +
theme(legend.justification=c(1,0), legend.position=c(1,0))
dplot2a
dplot2a
dplot2
multiplot(dplot2a, dplot2a)
multiplot(dplot2a, dplot2a, cols = 2)
rm(list=ls())     # remove previous objects from workspace
rm(list=ls())     # remove previous objects from workspace
setwd("~/Dropbox/lana/MCK/skriptak")
library(knitr)
#-------------------------------------------------------------------------------
# Set workspace
#-------------------------------------------------------------------------------
rm(list=ls())     # remove previous objects from workspace
# setwd("~/Dropbox/lana/MCK")
# setwd("C:\\Users\\decastroarrazolav\\Dropbox\\lana\\MCK")
#-------------------------------------------------------------------------------
# Functions, libraries
#-------------------------------------------------------------------------------
# install.packages("gridExtra")
library(ggplot2)
library(psych)
library(plyr)
library(vcd)
library(gridExtra)
source("rmetrics-functions1.R")
# source("skriptak/nl_nlb-couplets1.R")
countlabel <- stat_bin(geom="text", aes(label=..count.., vjust= -0.3, ymax = ..count..),
size = 4)
percentlabel <- stat_bin(geom="text",
aes(label = paste(round(100*(..count../sum(..count..)),0), "", sep = ""),
vjust= 1.5, ymax = ..count..), size = 4, colour = "white")
countdot <- stat_bindot(geom = "text", aes(label = ..count.., vjust = -5))
countdot <- stat_bindot(geom = "text", aes(label = round(100*(..count../sum(..count..)),0), vjust = -5))
#-------------------------------------------------------------------------------
# Load data
#-------------------------------------------------------------------------------
datuak <- readRDS("../datuak/eng/en-quatrain/en_rhquatrains.rds")
#-------------------------------------------------------------------------------
# Divide whole stanza into lines
#-------------------------------------------------------------------------------
LineTypes <- divide(datuak, paste("leng.ln", 1:4, sep = ""))
datuak <- cbind(datuak, LineTypes, stringsAsFactors = F)  ## add variable to dataframe
colnames(datuak)[1] <- "leng.stanza"
#-------------------------------------------------------------------------------
# Group line variables into couplets (leng.ln1 + leng.ln2, leng.ln3 + leng.ln4)
#-------------------------------------------------------------------------------
leng.cp1 <- paste(datuak[,2], datuak[,3], sep="")
leng.cp2 <- paste(datuak[,4], datuak[,5], sep="")
datuak <- cbind(datuak, leng.cp1, leng.cp2, stringsAsFactors = F)  ## add variable to dataframe
#-------------------------------------------------------------------------------
# Export database with new variables
#-------------------------------------------------------------------------------
# saveRDS(datuak, "../datuak/eng/en-quatrain/en_rhquatrains1.rds")
# write.table(datuak, file = "nlb_4linecouplets.csv", sep = ",", row.names = F)
datuak <- readRDS("../datuak/eng/en-quatrain/en_rhquatrains1.rds")
output <- paste("", knitr:::sub_ext(input, "html"), sep = "")
input <- "eng_quatrain2.R"
output <- paste("", knitr:::sub_ext(input, "html"), sep = "")
output
output <- paste("txostenak/", knitr:::sub_ext(input, "html"), sep = "")
output
opts_knit$set(upload.fun = image_uri) # this option embeds images in the html document
stitch(input, template =
system.file("misc", "knitr-template.Rhtml",
package = "knitr"),
output = output)
?spin
spin(input, knit = T, format = "Rhtml")
input
input <- "eng_quatrain2.R"
output <- paste("txostenak/", knitr:::sub_ext(input, "html"), sep = "")
opts_knit$set(upload.fun = image_uri) # this option embeds images in the html document
spin(input, knit = T, format = "Rhtml")
spin(input, knit = T, format = "Rhtml")
spin(input, knit = T, format = "Rhtml")
spin(input, knit = T, format = "Rhtml")
?rmarkdown::render
input <- "eng_quatrain2.R"
output <- paste("txostenak/", knitr:::sub_ext(input, "html"), sep = "")
input
library(rmarkdown)
render("eng_quatrain2.R", output_format = "html_document", output_dir = "txostenak/")
#-------------------------------------------------------------------------------
# Set workspace
#-------------------------------------------------------------------------------
rm(list=ls())     # remove previous objects from workspace
# setwd("~/Dropbox/lana/MCK")
# setwd("C:\\Users\\decastroarrazolav\\Dropbox\\lana\\MCK")
#-------------------------------------------------------------------------------
# Functions, libraries
#-------------------------------------------------------------------------------
# install.packages("gridExtra")
library(ggplot2)
library(psych)
library(plyr)
library(vcd)
library(gridExtra)
source("rmetrics-functions1.R")
# source("skriptak/nl_nlb-couplets1.R")
countlabel <- stat_bin(geom="text", aes(label=..count.., vjust= -0.3, ymax = ..count..),
size = 4)
percentlabel <- stat_bin(geom="text",
aes(label = paste(round(100*(..count../sum(..count..)),0), "", sep = ""),
vjust= 1.5, ymax = ..count..), size = 4, colour = "white")
countdot <- stat_bindot(geom = "text", aes(label = ..count.., vjust = -5))
countdot <- stat_bindot(geom = "text", aes(label = round(100*(..count../sum(..count..)),0), vjust = -5))
#-------------------------------------------------------------------------------
# Load data
#-------------------------------------------------------------------------------
datuak <- readRDS("../datuak/eng/en-quatrain/en_rhquatrains.rds")
#-------------------------------------------------------------------------------
# Divide whole stanza into lines
#-------------------------------------------------------------------------------
LineTypes <- divide(datuak, paste("leng.ln", 1:4, sep = ""))
datuak <- cbind(datuak, LineTypes, stringsAsFactors = F)  ## add variable to dataframe
colnames(datuak)[1] <- "leng.stanza"
#-------------------------------------------------------------------------------
# Group line variables into couplets (leng.ln1 + leng.ln2, leng.ln3 + leng.ln4)
#-------------------------------------------------------------------------------
leng.cp1 <- paste(datuak[,2], datuak[,3], sep="")
leng.cp2 <- paste(datuak[,4], datuak[,5], sep="")
datuak <- cbind(datuak, leng.cp1, leng.cp2, stringsAsFactors = F)  ## add variable to dataframe
#-------------------------------------------------------------------------------
# Export database with new variables
#-------------------------------------------------------------------------------
# saveRDS(datuak, "../datuak/eng/en-quatrain/en_rhquatrains1.rds")
# write.table(datuak, file = "nlb_4linecouplets.csv", sep = ",", row.names = F)
datuak <- readRDS("../datuak/eng/en-quatrain/en_rhquatrains1.rds")
head(datuak)
d <- datuak
names(d)
head(d)
table(d$leng.stanza)
table(d$leng.ln1, d$leng.ln2)
table(d$leng.cp1, d$leng.cp2)
render("eng_quatrain2.R",
output_format = "html_document",
output_dir = "txostenak/")
render("eng_quatrain2.R",
output_format = "html_document",
output_dir = "txostenak/")
render("eng_quatrain2.R",
output_format = "html_document",
output_dir = "txostenak/")
render("eng_quatrain2.R",
output_format = "html_document",
output_dir = "txostenak/")
render("eng_quatrain2.R",
output_format = "html_document",
output_dir = "txostenak/")
render("eng_quatrain2.R",
output_format = "html_document",
output_dir = "txostenak/")
render("eng_quatrain2.R",
output_format = "html_document",
output_dir = "txostenak/")
render("eng_quatrain2.R",
output_format = "html_document",
output_dir = "txostenak/")
render("eng_quatrain2.R",
output_format = "html_document",
output_dir = "txostenak/")
render("eng_quatrain2.R",
output_format = "html_document",
output_dir = "txostenak/",)
render("eng_quatrain2.R",
output_format = "html_document",
output_dir = "txostenak/",)
render("eng_quatrain2.R",
output_format = "html_document",
output_dir = "txostenak/")
head(datuak)
table(d$leng.cp1, d$leng.cp2)
dtb <- table(d$leng.cp1, d$leng.cp2)
dtb
dtb <- data.frame(table(d$leng.cp1, d$leng.cp2))
dtb
head(dtb)
ggplot(dtb) + aes(x = Var2, y = Freq) + geom_bar(stat = "identity")
a <- ggplot(dtb) + aes(x = Var2, y = Freq) + geom_bar(stat = "identity")
multiplot(a, a)
multiplot(a, a, a, a)
multiplot(a, a, a, a, 2)
multiplot(a, a, a, a, cols = 2)
a
multiplot(a, a)
multiplot(a, a, a, a, cols = 2)
multiplot(a, a)
a <- ggplot(dtb) + aes(x = Var1, y = Freq) + geom_bar(stat = "identity")
b <- ggplot(dtb) + aes(x = Var1, y = Freq) + geom_bar(stat = "identity")
b
a
b
multiplot(a, b)
a <- ggplot(dtb) + aes(x = Var2, y = Freq) + geom_bar(stat = "identity")
b <- ggplot(dtb) + aes(x = Var1, y = Freq) + geom_bar(stat = "identity")
a
b
a
b
multiplot(a, b)
multiplot(a, b, cols = 2)
multiplot(a, a, b, b, cols = 2)
render("eng_quatrain2.R",
output_format = "html_document",
output_dir = "txostenak/")
render("eng_quatrain2.R",
output_format = "html_document",
output_dir = "txostenak/")
render("eng_quatrain2.R",
output_format = "html_document",
output_dir = "txostenak/")
render("eng_quatrain2.R",
output_format = "html_document",
output_dir = "txostenak/")
render("eng_quatrain2.R",
output_format = "html_document",
output_dir = "txostenak/")
render("eng_quatrain2.R",
output_format = "html_document",
output_dir = "txostenak/")
render("eng_quatrain2.R",
output_format = "html_document",
output_dir = "txostenak/")
render("eng_quatrain2.R",
output_format = "html_document",
output_dir = "txostenak/")
render("eng_quatrain2.R",
output_format = "html_document",
output_dir = "txostenak/")
render("eng_quatrain2.R",
output_format = "html_document",
output_dir = "txostenak/")
render("eng_quatrain2.R",
output_format = "html_document",
output_dir = "txostenak/")
render("eng_quatrain2.R",
output_format = "html_document",
output_dir = "txostenak/")
render("eng_quatrain2.R",
output_format = "html_document",
output_dir = "txostenak/")
render("eng_quatrain2.R",
output_format = "html_document",
output_dir = "txostenak/")
render("eng_quatrain2.R",
output_format = "html_document",
output_dir = "txostenak/")
render("eng_quatrain2.R", output_options = "toc: true",
output_format = "html_document",
output_dir = "txostenak/")
render("eng_quatrain2.R", output_options = "title: aaa",
output_format = "html_document",
output_dir = "txostenak/")
render("eng_quatrain2.R", output_options = "title=aaa",
output_format = "html_document",
output_dir = "txostenak/")
render("eng_quatrain2.R",
output_options = "toc",
output_format = "html_document",
output_dir = "txostenak/")
render("eng_quatrain2.R",
output_options = "output:toc:true",
output_format = "html_document",
output_dir = "txostenak/")
render("eng_quatrain2.R",
output_options = "toc:yes",
output_format = "html_document",
output_dir = "txostenak/")
render("eng_quatrain2.R",
output_options = "tpc: true",
output_format = "html_document",
output_dir = "txostenak/")
render("eng_quatrain2.R",
output_options = "--toc true",
output_format = "html_document",
output_dir = "txostenak/")
render
render("eng_quatrain2.R",
output_format = "html_document",
output_dir = "txostenak/")
render("eng_quatrain2.R",
output_format = "html_document",
output_dir = "txostenak/")
render("eng_quatrain2.R",
output_format = "html_document",
output_dir = "txostenak/")
render("eng_quatrain2.R",
output_format = "html_document",
output_dir = "txostenak/")
render("eng_quatrain2.R",
output_format = "html_document",
output_dir = "txostenak/")
render("eng_quatrain2.R",
output_format = "html_document",
output_dir = "txostenak/")
render("eng_quatrain2.R",
output_format = "html_document",
output_dir = "txostenak/")
render("eng_quatrain2.R",
output_format = "html_document",
output_dir = "txostenak/")
render("eng_quatrain2.R",
output_format = "html_document",
output_dir = "txostenak/")
render("eng_quatrain2.R",
output_format = "html_document",
output_dir = "txostenak/")
render("eng_quatrain2.R",
output_format = "html_document",
output_dir = "txostenak/")
render("eng_quatrain2.R",
output_format = "html_document",
output_dir = "txostenak/")
render("eng_quatrain2.R",
output_format = "html_document",
output_dir = "txostenak/")
render("eng_quatrain2.R",
output_format = "html_document",
output_dir = "txostenak/")
render("eng_quatrain2.R",
output_format = "html_document",
output_dir = "txostenak/")
render("eng_quatrain2.R",
output_format = "html_document",
output_dir = "txostenak/")
render("eng_quatrain2.R",
output_format = "html_document",
output_dir = "txostenak/")
render("eng_quatrain2.R",
output_format = "html_document",
output_dir = "txostenak/")
render("nld_tsetting5_1.R",
output_format = "html_document",
output_dir = "txostenak/")
render("nld_tsetting5_1.R",
output_format = "html_document",
output_dir = "txostenak/")
datuak <- read.table("../datuak/nld/nlb/mtc-fs-textsettingtable.txt", header = F, sep = ",", stringsAsFactors = F)
datuak <- read.table("../datuak/nld/nlb/mtc-fs-textsettingtable.txt", header = F, sep = ",", stringsAsFactors = F)
render("nld_tsetting5_1.R",
output_format = "html_document",
output_dir = "txostenak/")
rm(list=ls())     # remove previous objects from workspace
setwd("~/Dropbox/lana/MCK/skriptak")
library(rmarkdown)
rm(list=ls())     # remove previous objects from workspace
setwd("~/Dropbox/lana/MCK/skriptak")
library(knitr)
library(rmarkdown)
?knitr::spin
rm(list=ls())     # remove previous objects from workspace
setwd("~/Dropbox/lana/MCK/skriptak")
library(knitr)
library(rmarkdown)
render("eng_quatrain2.R",
output_format = "html_document",
output_dir = "../txostenak")
render("eng_quatrain2.R",
output_format = "html_document",
output_dir = "../txostenak")
render("eng_quatrain2.R",
output_format = "html_document",
output_dir = "../txostenak")
render("eng_quatrain2.R",
output_format = "html_document",
output_dir = "../txostenak")
render("eng_quatrain2.R",
output_format = "html_document",
output_dir = "../txostenak")
render("eng_quatrain2.R",
output_format = "html_document",
output_dir = "../txostenak")
render("eng_quatrain2.R",
output_format = "html_document",
output_dir = "../txostenak")
rm(list=ls())     # remove previous objects from workspace
setwd("~/Dropbox/lana/MCK/skriptak")
library(knitr)
library(rmarkdown)
#-------------------------------------------------------------------------------
# Main function
#-------------------------------------------------------------------------------
# rmarkdown::render function uses knitr::spin under the hood
render("hch11_analysis1.R",
output_format = "html_document",
output_dir = "../txostenak")
rm(list=ls())     # remove previous objects from workspace
setwd("~/Dropbox/lana/MCK/skriptak")
# ovSubj <- 34
library(ggplot2)
library(psych)
source("../skriptak/rmetrics-functions1.R")
#--------------------------------------------------------
#' # Subject data
#--------------------------------------------------------
directory <- "../esperimentuak/hch11/response/"
setwd(directory)
sdata <- read.table("../hch11_subjectList.tsv", stringsAsFactors = F,
sep = "\t", header = T)
sdata <- sdata[sdata$phase == "pilot",]
datetime <- strsplit(sdata$date, "_")
sdata$date <- sapply(datetime, function(x) x[1])
sdata$time <- sapply(datetime, function(x) x[2])
sdata$age <- 2015 - as.integer(sdata$birthYear)
summary(sdata$age)
table(sdata$condition)
table(sdata$gender)
sdata$gender <- tolower(sdata$gender)
sdata[sdata$gender %in% c("male"), "gender"] <- "m"
sdata[sdata$gender %in% c("female"), "gender"] <- "f"
table(sdata$gender)
summary(as.integer(sdata$music))
sdata$nativeLanguages <- tolower(sdata$nativeLanguages)
table(sdata$nativeLanguages)
sdata$otherLanguages <- tolower(sdata$otherLanguages)
table(sdata$otherLanguages)
# mark whether subject is early monolingual,
# that is, they did not speak more than one language at a young age.
sdata$monoling <- 1
# if more than 1 native language, mark as non-monolingual
sdata[grep(",", sdata$nativeLanguages),"monoling"] <- 0
# if otherLanguages is empty, subject wrote others under native
sdata[(sdata$otherLanguages == ""),"monoling"] <- 1
# n of non-monoling
table(sdata$monoling)
#--------------------------------------------------------
#' # Response data
#--------------------------------------------------------
response_all <- data.frame()
for (f in list.files("pilot/chain1/", pattern = ".*inout.*", full.names = T)) {
if (file.info(f)$size > 0) {
resp <- read.table(f, sep = ",", header = F, stringsAsFactors = F)
response_all <- rbind(response_all, resp)}
}
response <- response_all
colnames(response) <- c("snumber", "block", "inseq", "outseq", "score")
# remove subject 0
response <- response[response[,"snumber"] != 0,]
d <- response
tapply(d$score, list(d$block, d$snumber), mean)
